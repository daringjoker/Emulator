//
// Created by DaringJoker on 9/28/2020.
//

#ifndef EMULATOR_INSTRUCTIONS_H
#define EMULATOR_INSTRUCTIONS_H

#include<map>
#include<string>
#include "../Components/constants.h"

using namespace std;

typedef struct {
    string Pattern;
    Byte opcode;
    Byte Instruction_length;
}Instruction;

//For Disassembly and Instruction Decodings

static map<Byte,Instruction>opcode2Instr={
        {0xCE,{"ACI Data",0xCE,2}},
        {0x8F,{"ADC A",0x8F,1}},
        {0x88,{"ADC B",0x88,1}},
        {0x89,{"ADC C",0x89,1}},
        {0x8A,{"ADC D",0x8A,1}},
        {0x8B,{"ADC E",0x8B,1}},
        {0x8C,{"ADC H",0x8C,1}},
        {0x8D,{"ADC L",0x8D,1}},
        {0x8E,{"ADC M",0x8E,1}},
        {0x87,{"ADD A",0x87,1}},
        {0x80,{"ADD B",0x80,1}},
        {0x81,{"ADD C",0x81,1}},
        {0x82,{"ADD D",0x82,1}},
        {0x83,{"ADD E",0x83,1}},
        {0x84,{"ADD H",0x84,1}},
        {0x85,{"ADD L",0x85,1}},
        {0x86,{"ADD M",0x86,1}},
        {0xC6,{"ADI Data",0xC6,2}},
        {0xA7,{"ANA A",0xA7,1}},
        {0xA0,{"ANA B",0xA0,1}},
        {0xA1,{"ANA C",0xA1,1}},
        {0xA2,{"ANA D",0xA2,1}},
        {0xA3,{"ANA E",0xA3,1}},
        {0xA4,{"ANA H",0xA4,1}},
        {0xA5,{"ANA L",0xA5,1}},
        {0xA6,{"ANA M",0xA6,1}},
        {0xE6,{"ANI Data",0xE6,2}},
        {0xCD,{"CALL Label",0xCD,3}},
        {0xDC,{"CC Label",0xDC,3}},
        {0xFC,{"CM Label",0xFC,3}},
        {0x2F,{"CMA",0x2F,1}},
        {0x3F,{"CMC",0x3F,1}},
        {0xBF,{"CMP A",0xBF,1}},
        {0xB8,{"CMP B",0xB8,1}},
        {0xB9,{"CMP C",0xB9,1}},
        {0xBA,{"CMP D",0xBA,1}},
        {0xBB,{"CMP E",0xBB,1}},
        {0xBC,{"CMP H",0xBC,1}},
        {0xBD,{"CMP M",0xBD,1}},
        {0xD4,{"CNC Label",0xD4,3}},
        {0xC4,{"CNZ Label",0xC4,3}},
        {0xF4,{"CP Label",0xF4,3}},
        {0xEC,{"CPE Label",0xEC,3}},
        {0xFE,{"CPI Data",0xFE,2}},
        {0xE4,{"CPO Label",0xE4,3}},
        {0xCC,{"CZ Label",0xCC,3}},
        {0x27,{"DAA",0x27,1}},
        {0x09,{"DAD B",0x09,1}},
        {0x19,{"DAD D",0x19,1}},
        {0x29,{"DAD H",0x29,1}},
        {0x39,{"DAD SP",0x39,1}},
        {0x3D,{"DCR A",0x3D,1}},
        {0x05,{"DCR B",0x05,1}},
        {0x0D,{"DCR C",0x0D,1}},
        {0x15,{"DCR D",0x15,1}},
        {0x1D,{"DCR E",0x1D,1}},
        {0x25,{"DCR H",0x25,1}},
        {0x2D,{"DCR L",0x2D,1}},
        {0x35,{"DCR M",0x35,1}},
        {0x0B,{"DCX B",0x0B,1}},
        {0x1B,{"DCX D",0x1B,1}},
        {0x2B,{"DCX H",0x2B,1}},
        {0x3B,{"DCX SP",0x3B,1}},
        {0xF3,{"DI",0xF3,1}},
        {0xFB,{"EI",0xFB,1}},
        {0x76,{"HLT",0x76,1}},
        {0xDB,{"IN Port-address",0xDB,2}},
        {0x3C,{"INR A",0x3C,1}},
        {0x04,{"INR B",0x04,1}},
        {0x0C,{"INR C",0x0C,1}},
        {0x14,{"INR D",0x14,1}},
        {0x1C,{"INR E",0x1C,1}},
        {0x24,{"INR H",0x24,1}},
        {0x2C,{"INR L",0x2C,1}},
        {0x34,{"INR M",0x34,1}},
        {0x03,{"INX B",0x03,1}},
        {0x13,{"INX D",0x13,1}},
        {0x23,{"INX H",0x23,1}},
        {0x33,{"INX SP",0x33,1}},
        {0xDA,{"JC Label",0xDA,3}},
        {0xFA,{"JM Label",0xFA,3}},
        {0xC3,{"JMP Label",0xC3,3}},
        {0xD2,{"JNC Label",0xD2,3}},
        {0xC2,{"JNZ Label",0xC2,3}},
        {0xF2,{"JP Label",0xF2,3}},
        {0xEA,{"JPE Label",0xEA,3}},
        {0xE2,{"JPO Label",0xE2,3}},
        {0xCA,{"JZ Label",0xCA,3}},
        {0x3A,{"LDA Address",0x3A,3}},
        {0x0A,{"LDAX B",0x0A,1}},
        {0x1A,{"LDAX D",0x1A,1}},
        {0x2A,{"LHLD Address",0x2A,3}},
        {0x01,{"LXI B",0x01,3}},
        {0x11,{"LXI D",0x11,3}},
        {0x21,{"LXI H",0x21,3}},
        {0x31,{"LXI SP",0x31,3}},
        {0x7F,{"MOV A, A",0x7F,1}},
        {0x78,{"MOV A, B",0x78,1}},
        {0x79,{"MOV A, C",0x79,1}},
        {0x7A,{"MOV A, D",0x7A,1}},
        {0x7B,{"MOV A, E",0x7B,1}},
        {0x7C,{"MOV A, H",0x7C,1}},
        {0x7D,{"MOV A, L",0x7D,1}},
        {0x7E,{"MOV A, M",0x7E,1}},
        {0x47,{"MOV B, A",0x47,1}},
        {0x40,{"MOV B, B",0x40,1}},
        {0x41,{"MOV B, C",0x41,1}},
        {0x42,{"MOV B, D",0x42,1}},
        {0x43,{"MOV B, E",0x43,1}},
        {0x44,{"MOV B, H",0x44,1}},
        {0x45,{"MOV B, L",0x45,1}},
        {0x46,{"MOV B, M",0x46,1}},
        {0x4F,{"MOV C, A",0x4F,1}},
        {0x48,{"MOV C, B",0x48,1}},
        {0x49,{"MOV C, C",0x49,1}},
        {0x4A,{"MOV C, D",0x4A,1}},
        {0x4B,{"MOV C, E",0x4B,1}},
        {0x4C,{"MOV C, H",0x4C,1}},
        {0x4D,{"MOV C, L",0x4D,1}},
        {0x4E,{"MOV C, M",0x4E,1}},
        {0x57,{"MOV D, A",0x57,1}},
        {0x50,{"MOV D, B",0x50,1}},
        {0x51,{"MOV D, C",0x51,1}},
        {0x52,{"MOV D, D",0x52,1}},
        {0x53,{"MOV D, E",0x53,1}},
        {0x54,{"MOV D, H",0x54,1}},
        {0x55,{"MOV D, L",0x55,1}},
        {0x56,{"MOV D, M",0x56,1}},
        {0x5F,{"MOV E, A",0x5F,1}},
        {0x58,{"MOV E, B",0x58,1}},
        {0x59,{"MOV E, C",0x59,1}},
        {0x5A,{"MOV E, D",0x5A,1}},
        {0x5B,{"MOV E, E",0x5B,1}},
        {0x5C,{"MOV E, H",0x5C,1}},
        {0x5D,{"MOV E, L",0x5D,1}},
        {0x5E,{"MOV E, M",0x5E,1}},
        {0x67,{"MOV H, A",0x67,1}},
        {0x60,{"MOV H, B",0x60,1}},
        {0x61,{"MOV H, C",0x61,1}},
        {0x62,{"MOV H, D",0x62,1}},
        {0x63,{"MOV H, E",0x63,1}},
        {0x64,{"MOV H, H",0x64,1}},
        {0x65,{"MOV H, L",0x65,1}},
        {0x66,{"MOV H, M",0x66,1}},
        {0x6F,{"MOV L, A",0x6F,1}},
        {0x68,{"MOV L, B",0x68,1}},
        {0x69,{"MOV L, C",0x69,1}},
        {0x6A,{"MOV L, D",0x6A,1}},
        {0x6B,{"MOV L, E",0x6B,1}},
        {0x6C,{"MOV L, H",0x6C,1}},
        {0x6D,{"MOV L, L",0x6D,1}},
        {0x6E,{"MOV L, M",0x6E,1}},
        {0x77,{"MOV M, A",0x77,1}},
        {0x70,{"MOV M, B",0x70,1}},
        {0x71,{"MOV M, C",0x71,1}},
        {0x72,{"MOV M, D",0x72,1}},
        {0x73,{"MOV M, E",0x73,1}},
        {0x74,{"MOV M, H",0x74,1}},
        {0x75,{"MOV M, L",0x75,1}},
        {0x3E,{"MVI A, Data",0x3E,2}},
        {0x06,{"MVI B, Data",0x06,2}},
        {0x0E,{"MVI C, Data",0x0E,2}},
        {0x16,{"MVI D, Data",0x16,2}},
        {0x1E,{"MVI E, Data",0x1E,2}},
        {0x26,{"MVI H, Data",0x26,2}},
        {0x2E,{"MVI L, Data",0x2E,2}},
        {0x36,{"MVI M, Data",0x36,2}},
        {0x00,{"NOP",0x00,1}},
        {0xB7,{"ORA A",0xB7,1}},
        {0xB0,{"ORA B",0xB0,1}},
        {0xB1,{"ORA C",0xB1,1}},
        {0xB2,{"ORA D",0xB2,1}},
        {0xB3,{"ORA E",0xB3,1}},
        {0xB4,{"ORA H",0xB4,1}},
        {0xB5,{"ORA L",0xB5,1}},
        {0xB6,{"ORA M",0xB6,1}},
        {0xF6,{"ORI Data",0xF6,2}},
        {0xD3,{"OUT Port-Address",0xD3,2}},
        {0xE9,{"PCHL",0xE9,1}},
        {0xC1,{"POP B",0xC1,1}},
        {0xD1,{"POP D",0xD1,1}},
        {0xE1,{"POP H",0xE1,1}},
        {0xF1,{"POP PSW",0xF1,1}},
        {0xC5,{"PUSH B",0xC5,1}},
        {0xD5,{"PUSH D",0xD5,1}},
        {0xE5,{"PUSH H",0xE5,1}},
        {0xF5,{"PUSH PSW",0xF5,1}},
        {0x17,{"RAL",0x17,1}},
        {0x1F,{"RAR",0x1F,1}},
        {0xD8,{"RC",0xD8,1}},
        {0xC9,{"RET",0xC9,1}},
        {0x20,{"RIM",0x20,1}},
        {0x07,{"RLC",0x07,1}},
        {0xF8,{"RM",0xF8,1}},
        {0xD0,{"RNC",0xD0,1}},
        {0xC0,{"RNZ",0xC0,1}},
        {0xF0,{"RP",0xF0,1}},
        {0xE8,{"RPE",0xE8,1}},
        {0xE0,{"RPO",0xE0,1}},
        {0x0F,{"RRC",0x0F,1}},
        {0xC7,{"RST 0",0xC7,1}},
        {0xCF,{"RST 1",0xCF,1}},
        {0xD7,{"RST 2",0xD7,1}},
        {0xDF,{"RST 3",0xDF,1}},
        {0xE7,{"RST 4",0xE7,1}},
        {0xEF,{"RST 5",0xEF,1}},
        {0xF7,{"RST 6",0xF7,1}},
        {0xFF,{"RST 7",0xFF,1}},
        {0xC8,{"RZ",0xC8,1}},
        {0x9F,{"SBB A",0x9F,1}},
        {0x98,{"SBB B",0x98,1}},
        {0x99,{"SBB C",0x99,1}},
        {0x9A,{"SBB D",0x9A,1}},
        {0x9B,{"SBB E",0x9B,1}},
        {0x9C,{"SBB H",0x9C,1}},
        {0x9D,{"SBB L",0x9D,1}},
        {0x9E,{"SBB M",0x9E,1}},
        {0xDE,{"SBI Data",0xDE,2}},
        {0x22,{"SHLD Address",0x22,3}},
        {0x30,{"SIM",0x30,1}},
        {0xF9,{"SPHL",0xF9,1}},
        {0x32,{"STA Address",0x32,3}},
        {0x02,{"STAX B",0x02,1}},
        {0x12,{"STAX D",0x12,1}},
        {0x37,{"STC",0x37,1}},
        {0x97,{"SUB A",0x97,1}},
        {0x90,{"SUB B",0x90,1}},
        {0x91,{"SUB C",0x91,1}},
        {0x92,{"SUB D",0x92,1}},
        {0x93,{"SUB E",0x93,1}},
        {0x94,{"SUB H",0x94,1}},
        {0x95,{"SUB L",0x95,1}},
        {0x96,{"SUB M",0x96,1}},
        {0xD6,{"SUI Data",0xD6,2}},
        {0xEB,{"XCHG",0xEB,1}},
        {0xAF,{"XRA A",0xAF,1}},
        {0xA8,{"XRA B",0xA8,1}},
        {0xA9,{"XRA C",0xA9,1}},
        {0xAA,{"XRA D",0xAA,1}},
        {0xAB,{"XRA E",0xAB,1}},
        {0xAC,{"XRA H",0xAC,1}},
        {0xAD,{"XRA L",0xAD,1}},
        {0xAE,{"XRA M",0xAE,1}},
        {0xEE,{"XRI Data",0xEE,2}},
        {0xE3,{"XTHL",0xE3,1}},

};

//For the Assembly Process


static map<string,Byte>Pattern2opcode={
        {"ACI DATA",0xCE},
        {"ADC A",0x8F},
        {"ADC B",0x88},
        {"ADC C",0x89},
        {"ADC D",0x8A},
        {"ADC E",0x8B},
        {"ADC H",0x8C},
        {"ADC L",0x8D},
        {"ADC M",0x8E},
        {"ADD A",0x87},
        {"ADD B",0x80},
        {"ADD C",0x81},
        {"ADD D",0x82},
        {"ADD E",0x83},
        {"ADD H",0x84},
        {"ADD L",0x85},
        {"ADD M",0x86},
        {"ADI DATA",0xC6},
        {"ANA A",0xA7},
        {"ANA B",0xA0},
        {"ANA C",0xA1},
        {"ANA D",0xA2},
        {"ANA E",0xA3},
        {"ANA H",0xA4},
        {"ANA L",0xA5},
        {"ANA M",0xA6},
        {"ANI DATA",0xE6},
        {"CALL LABEL",0xCD},
        {"CC LABEL",0xDC},
        {"CM LABEL",0xFC},
        {"CMA",0x2F},
        {"CMC",0x3F},
        {"CMP A",0xBF},
        {"CMP B",0xB8},
        {"CMP C",0xB9},
        {"CMP D",0xBA},
        {"CMP E",0xBB},
        {"CMP H",0xBC},
        {"CMP M",0xBD},
        {"CNC LABEL",0xD4},
        {"CNZ LABEL",0xC4},
        {"CP LABEL",0xF4},
        {"CPE LABEL",0xEC},
        {"CPI DATA",0xFE},
        {"CPO LABEL",0xE4},
        {"CZ LABEL",0xCC},
        {"DAA",0x27},
        {"DAD B",0x09},
        {"DAD D",0x19},
        {"DAD H",0x29},
        {"DAD SP",0x39},
        {"DCR A",0x3D},
        {"DCR B",0x05},
        {"DCR C",0x0D},
        {"DCR D",0x15},
        {"DCR E",0x1D},
        {"DCR H",0x25},
        {"DCR L",0x2D},
        {"DCR M",0x35},
        {"DCX B",0x0B},
        {"DCX D",0x1B},
        {"DCX H",0x2B},
        {"DCX SP",0x3B},
        {"DI",0xF3},
        {"EI",0xFB},
        {"HLT",0x76},
        {"IN DATA",0xDB},
        {"INR A",0x3C},
        {"INR B",0x04},
        {"INR C",0x0C},
        {"INR D",0x14},
        {"INR E",0x1C},
        {"INR H",0x24},
        {"INR L",0x2C},
        {"INR M",0x34},
        {"INX B",0x03},
        {"INX D",0x13},
        {"INX H",0x23},
        {"INX SP",0x33},
        {"JC LABEL",0xDA},
        {"JM LABEL",0xFA},
        {"JMP LABEL",0xC3},
        {"JNC LABEL",0xD2},
        {"JNZ LABEL",0xC2},
        {"JP LABEL",0xF2},
        {"JPE LABEL",0xEA},
        {"JPO LABEL",0xE2},
        {"JZ LABEL",0xCA},
        {"LDA DATA",0x3A},
        {"LDAX B",0x0A},
        {"LDAX D",0x1A},
        {"LHLD DATA",0x2A},
        {"LXI B, DATA",0x01},
        {"LXI D, DATA",0x11},
        {"LXI H, DATA",0x21},
        {"LXI SP, DATA",0x31},
        {"MOV A, A",0x7F},
        {"MOV A, B",0x78},
        {"MOV A, C",0x79},
        {"MOV A, D",0x7A},
        {"MOV A, E",0x7B},
        {"MOV A, H",0x7C},
        {"MOV A, L",0x7D},
        {"MOV A, M",0x7E},
        {"MOV B, A",0x47},
        {"MOV B, B",0x40},
        {"MOV B, C",0x41},
        {"MOV B, D",0x42},
        {"MOV B, E",0x43},
        {"MOV B, H",0x44},
        {"MOV B, L",0x45},
        {"MOV B, M",0x46},
        {"MOV C, A",0x4F},
        {"MOV C, B",0x48},
        {"MOV C, C",0x49},
        {"MOV C, D",0x4A},
        {"MOV C, E",0x4B},
        {"MOV C, H",0x4C},
        {"MOV C, L",0x4D},
        {"MOV C, M",0x4E},
        {"MOV D, A",0x57},
        {"MOV D, B",0x50},
        {"MOV D, C",0x51},
        {"MOV D, D",0x52},
        {"MOV D, E",0x53},
        {"MOV D, H",0x54},
        {"MOV D, L",0x55},
        {"MOV D, M",0x56},
        {"MOV E, A",0x5F},
        {"MOV E, B",0x58},
        {"MOV E, C",0x59},
        {"MOV E, D",0x5A},
        {"MOV E, E",0x5B},
        {"MOV E, H",0x5C},
        {"MOV E, L",0x5D},
        {"MOV E, M",0x5E},
        {"MOV H, A",0x67},
        {"MOV H, B",0x60},
        {"MOV H, C",0x61},
        {"MOV H, D",0x62},
        {"MOV H, E",0x63},
        {"MOV H, H",0x64},
        {"MOV H, L",0x65},
        {"MOV H, M",0x66},
        {"MOV L, A",0x6F},
        {"MOV L, B",0x68},
        {"MOV L, C",0x69},
        {"MOV L, D",0x6A},
        {"MOV L, E",0x6B},
        {"MOV L, H",0x6C},
        {"MOV L, L",0x6D},
        {"MOV L, M",0x6E},
        {"MOV M, A",0x77},
        {"MOV M, B",0x70},
        {"MOV M, C",0x71},
        {"MOV M, D",0x72},
        {"MOV M, E",0x73},
        {"MOV M, H",0x74},
        {"MOV M, L",0x75},
        {"MVI A, DATA",0x3E},
        {"MVI B, DATA",0x06},
        {"MVI C, DATA",0x0E},
        {"MVI D, DATA",0x16},
        {"MVI E, DATA",0x1E},
        {"MVI H, DATA",0x26},
        {"MVI L, DATA",0x2E},
        {"MVI M, DATA",0x36},
        {"NOP",0x00},
        {"ORA A",0xB7},
        {"ORA B",0xB0},
        {"ORA C",0xB1},
        {"ORA D",0xB2},
        {"ORA E",0xB3},
        {"ORA H",0xB4},
        {"ORA L",0xB5},
        {"ORA M",0xB6},
        {"ORI DATA",0xF6},
        {"OUT DATA",0xD3},
        {"PCHL",0xE9},
        {"POP B",0xC1},
        {"POP D",0xD1},
        {"POP H",0xE1},
        {"POP PSW",0xF1},
        {"PUSH B",0xC5},
        {"PUSH D",0xD5},
        {"PUSH H",0xE5},
        {"PUSH PSW",0xF5},
        {"RAL",0x17},
        {"RAR",0x1F},
        {"RC",0xD8},
        {"RET",0xC9},
        {"RIM",0x20},
        {"RLC",0x07},
        {"RM",0xF8},
        {"RNC",0xD0},
        {"RNZ",0xC0},
        {"RP",0xF0},
        {"RPE",0xE8},
        {"RPO",0xE0},
        {"RRC",0x0F},
        {"RST 0",0xC7},
        {"RST 1",0xCF},
        {"RST 2",0xD7},
        {"RST 3",0xDF},
        {"RST 4",0xE7},
        {"RST 5",0xEF},
        {"RST 6",0xF7},
        {"RST 7",0xFF},
        {"RZ",0xC8},
        {"SBB A",0x9F},
        {"SBB B",0x98},
        {"SBB C",0x99},
        {"SBB D",0x9A},
        {"SBB E",0x9B},
        {"SBB H",0x9C},
        {"SBB L",0x9D},
        {"SBB M",0x9E},
        {"SBI DATA",0xDE},
        {"SHLD DATA",0x22},
        {"SIM",0x30},
        {"SPHL",0xF9},
        {"STA DATA",0x32},
        {"STAX B",0x02},
        {"STAX D",0x12},
        {"STC",0x37},
        {"SUB A",0x97},
        {"SUB B",0x90},
        {"SUB C",0x91},
        {"SUB D",0x92},
        {"SUB E",0x93},
        {"SUB H",0x94},
        {"SUB L",0x95},
        {"SUB M",0x96},
        {"SUI DATA",0xD6},
        {"XCHG",0xEB},
        {"XRA A",0xAF},
        {"XRA B",0xA8},
        {"XRA C",0xA9},
        {"XRA D",0xAA},
        {"XRA E",0xAB},
        {"XRA H",0xAC},
        {"XRA L",0xAD},
        {"XRA M",0xAE},
        {"XRI DATA",0xEE},
        {"XTHL",0xE3},
};

//list of all instructions

static vector<string>instrList={
        "JC","ORI","JNZ","STA","CNC","CC","PCHL","CMA","ACI","PUSH",
        "OUT","RLC","INR","ANI","SIM","RST","STAX","SHLD","XCHG","JM",
        "SBB","CM","RM","JZ","CPE","ADI","INX","CP","POP","CALL",
        "JPE","NOP","CMP","LDA","RZ","RPO","LXI","EI","DI","CMC",
        "RP","RC","RPE","IN","RNC","CPO","STC","SBI","JMP","JNC",
        "DCR","RNZ","CZ","SPHL","RAR","ADC","ORA","RET","ADD","LHLD",
        "SUI","CNZ","SUB","DAA","RIM","XRI","XRA","RAL","XTHL","JPO",
        "DCX","RRC","JP","CPI","HLT","MVI","ANA","MOV","LDAX","DAD",
};
static vector<string>regList={
        "A","B","C","D","E","H","L","PSW","M","SP"
};
typedef struct{
    string stencil;
    Byte size;
}gen_instr;
static map<string,gen_instr>generify={
        {"CMA",{"CMA ", 1}},
        {"RIM",{"RIM ", 1}},
        {"LDAX",{"LDAX Reg", 1}},
        {"ANI",{"ANI Immediate", 2}},
        {"ORA",{"ORA Reg", 1}},
        {"RAR",{"RAR ", 1}},
        {"JMP",{"JMP Label", 3}},
        {"ADI",{"ADI Immediate", 2}},
        {"ADC",{"ADC Reg", 1}},
        {"RZ",{"RZ ", 1}},
        {"DCX",{"DCX Reg", 1}},
        {"LXI",{"LXI Reg", 3}},
        {"JPO",{"JPO Label", 3}},
        {"POP",{"POP Reg", 1}},
        {"LHLD",{"LHLD Immediate", 3}},
        {"CALL",{"CALL Label", 3}},
        {"RC",{"RC ", 1}},
        {"RPO",{"RPO ", 1}},
        {"SUB",{"SUB Reg", 1}},
        {"STAX",{"STAX Reg", 1}},
        {"DAA",{"DAA ", 1}},
        {"JPE",{"JPE Label", 3}},
        {"SUI",{"SUI Immediate", 2}},
        {"CNC",{"CNC Label", 3}},
        {"CMC",{"CMC ", 1}},
        {"RNZ",{"RNZ ", 1}},
        {"RST",{"RST Immediate", 1}},
        {"CPI",{"CPI Immediate", 2}},
        {"RM",{"RM ", 1}},
        {"CNZ",{"CNZ Label", 3}},
        {"CC",{"CC Label", 3}},
        {"SHLD",{"SHLD Immediate", 3}},
        {"CPO",{"CPO Label", 3}},
        {"CM",{"CM Label", 3}},
        {"SBB",{"SBB Reg", 1}},
        {"RLC",{"RLC ", 1}},
        {"XCHG",{"XCHG ", 1}},
        {"PUSH",{"PUSH Reg", 1}},
        {"INR",{"INR Reg", 1}},
        {"JM",{"JM Label", 3}},
        {"PCHL",{"PCHL ", 1}},
        {"LDA",{"LDA Immediate", 3}},
        {"STC",{"STC ", 1}},
        {"MOV",{"MOV Reg, Reg", 1}},
        {"DI",{"DI ", 1}},
        {"DAD",{"DAD Reg", 1}},
        {"STA",{"STA Immediate", 3}},
        {"XRA",{"XRA Reg", 1}},
        {"RNC",{"RNC ", 1}},
        {"SPHL",{"SPHL ", 1}},
        {"SIM",{"SIM ", 1}},
        {"ANA",{"ANA Reg", 1}},
        {"MVI",{"MVI Reg, Immediate", 2}},
        {"SBI",{"SBI Immediate", 2}},
        {"RP",{"RP ", 1}},
        {"CPE",{"CPE Label", 3}},
        {"ADD",{"ADD Reg", 1}},
        {"CP",{"CP Label", 3}},
        {"RPE",{"RPE ", 1}},
        {"INX",{"INX Reg", 1}},
        {"CZ",{"CZ Label", 3}},
        {"JNZ",{"JNZ Label", 3}},
        {"JC",{"JC Label", 3}},
        {"ACI",{"ACI Immediate", 2}},
        {"EI",{"EI ", 1}},
        {"CMP",{"CMP Reg", 1}},
        {"XRI",{"XRI Immediate", 2}},
        {"ORI",{"ORI Immediate", 2}},
        {"JNC",{"JNC Label", 3}},
        {"HLT",{"HLT ", 1}},
        {"DCR",{"DCR Reg", 1}},
        {"XTHL",{"XTHL ", 1}},
        {"OUT",{"OUT Immediate", 2}},
        {"JZ",{"JZ Label", 3}},
        {"RRC",{"RRC ", 1}},
        {"IN",{"IN Immediate", 2}},
        {"NOP",{"NOP ", 1}},
        {"RAL",{"RAL ", 1}},
        {"JP",{"JP Label", 3}},
        {"RET",{"RET ", 1}},
};
static gen_instr make_generic(string word)
{
    transform(word.begin(), word.end(), word.begin(), ::toupper);
    return generify[word];
}
static bool is_register(string word){
    transform(word.begin(), word.end(), word.begin(), ::toupper);
    for(auto reg : regList)
        if(word == reg) return true;
    return false;
}

static bool is_instruction(string instr){
    transform(instr.begin(),instr.end(),instr.begin(),::toupper);
    for(auto instruction : instrList)
        if(instr==instruction) return true;
    return false;
}
#endif //EMULATOR_INSTRUCTIONS_H
